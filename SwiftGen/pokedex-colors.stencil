// swiftlint:disable all
// Generated using SwiftGen â€” https://github.com/SwiftGen/SwiftGen

{% if catalogs %}
{% macro hasValuesBlock assets filter %}
  {%- for asset in assets -%}
    {%- if asset.type == filter -%}
      1
    {%- elif asset.items -%}
      {% call hasValuesBlock asset.items filter %}
    {%- endif -%}
  {%- endfor -%}
{% endmacro %}
{% set enumName %}{{param.enumName|default:"Asset"}}{% endset %}
{% set forceNamespaces %}{{param.forceProvidesNamespaces|default:"false"}}{% endset %}
{% set accessModifier %}{% if param.publicAccess %}public{% else %}internal{% endif %}{% endset %}
{% set hasColor %}{% for catalog in catalogs %}{% call hasValuesBlock catalog.assets "color" %}{% endfor %}{% endset %}
import SwiftUI
{% if hasColor %}
import UIKit
{% endif %}

// MARK: - Asset Catalogs

{% macro enumBlock assets %}
  {% call casesBlock assets %}
{% endmacro %}
{% macro casesBlock assets %}
    {% for asset in assets %}
    {% if asset.type == "color" %}
    {{accessModifier}} static let {{asset.name|swiftIdentifier:"pretty"|lowerFirstWord|escapeReservedKeywords}} = SwiftUI.Color("{{asset.value}}")
    {% elif asset.items and ( forceNamespaces == "true" or asset.isNamespaced == "true" ) %}
    {{accessModifier}} enum {{asset.name|swiftIdentifier:"pretty"|upperFirstLetter|escapeReservedKeywords}} {
      {% filter indent:4," ",true %}{% call casesBlock asset.items %}{% endfilter %}
    }
    {% elif asset.items %}
    {% call casesBlock asset.items %}
    {% endif %}
    {% endfor %}
{% endmacro %}
{% macro allValuesBlock assets filter prefix %}
  {% for asset in assets %}
  {% if asset.type == filter %}
  {{prefix}}{{asset.name|swiftIdentifier:"pretty"|lowerFirstWord|escapeReservedKeywords}},
  {% elif asset.items and ( forceNamespaces == "true" or asset.isNamespaced == "true" ) %}
  {% set prefix2 %}{{prefix}}{{asset.name|swiftIdentifier:"pretty"|escapeReservedKeywords}}.{% endset %}
  {% call allValuesBlock asset.items filter prefix2 %}
  {% elif asset.items %}
  {% call allValuesBlock asset.items filter prefix %}
  {% endif %}
  {% endfor %}
{% endmacro %}
extension Theme {
  {{accessModifier}} enum {{enumName}} {
    {% if catalogs.count > 1 or param.forceFileNameEnum %}
    {% for catalog in catalogs %}
    {{accessModifier}} enum {{catalog.name|swiftIdentifier:"pretty"|lowerFirstWord|escapeReservedKeywords}} {
      {% if catalog.assets %}
      {% filter indent:2," ",true %}{% call enumBlock catalog.assets %}{% endfilter %}
      {% endif %}
    }
    {% endfor %}
    {% else %}
    {% call enumBlock catalogs.first.assets %}
    {% endif %}
  }
}

{% if hasColor %}
// MARK: - Implementation Details

{{accessModifier}} extension SwiftUI.Color {
  var uiColor: UIColor {
    UIColor(self)
  }
}
{% endif %}
{% endif %}